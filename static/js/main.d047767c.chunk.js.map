{"version":3,"sources":["modules/_components/movesTable/movesTable.css","modules/header/header.css","App.css","modules/_components/numberSelector/numberSelector.css","modules/_components/inputDisplay/inputDisplay.css","modules/body/body.css","modules/_components/button/button.css","modules/_components/button/index.jsx","commons/constants/literals.js","modules/header/index.jsx","modules/_components/numberSelector/index.jsx","modules/_components/input/index.jsx","modules/_components/inputDisplay/index.jsx","modules/_components/movesTable/index.jsx","commons/helpers/main.js","modules/body/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","container","expanded","header","table","text","reload","wrapper","mainContainer","btn","btnDisabled","input","actionButton","button","cx","classNames","bind","styles","Button","_ref","className","isDisabled","isHidden","onClick","btnStyle","spanTag","react_default","a","createElement","disabled","hidden","type","literals","Header","LITERALS","_components_button","window","location","Component","NumberSelector","btnValues","buttons","map","key","Input","value","InputDisplay","inputList","inputs","inp","id","MovesTable","moves","_useState","useState","_useState2","Object","slicedToArray","isExpanded","changeExpanded","movesTag","move","combination","correctPosition","coincidence","classess","movements","getButtonsValues","getInputValues","getRandomNumbers","vMin","arguments","length","undefined","vMax","rndmNumbers","num","Math","floor","random","indexOf","push","console","log","Body","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetGame","setState","secretNumber","inputValues","isGameOver","checkAnswer","_this$state","state","hitsbin","end","join","correct","coinc","forEach","number","i","concat","y","unshift","clickHandler","val","_this$state2","x","playAgain","assertThisInitialized","_this$state3","lastMovement","_components_inputDisplay","_components_numberSelector","_components_movesTable","App","modules_header","modules_body","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d047767c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"movesTable__container__pLogR\",\"expanded\":\"movesTable__expanded__1CeOU\",\"header\":\"movesTable__header__3FjqU\",\"table\":\"movesTable__table__1n41d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header__container__epUkF\",\"text\":\"header__text__1qqHg\",\"reload\":\"header__reload__3GJhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App__wrapper__3QGUb\",\"mainContainer\":\"App__mainContainer__3iVBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"numberSelector__container__1PZQN\",\"btn\":\"numberSelector__btn__7IWBI\",\"btnDisabled\":\"numberSelector__btnDisabled__IViLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"inputDisplay__container__labCm\",\"input\":\"inputDisplay__input__xU2-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"body__container__3YjIu\",\"actionButton\":\"body__actionButton__q3RiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button__button__3MWgb\",\"btnDisabled\":\"button__btnDisabled__1ltxk\"};","// Libs\r\nimport React from 'react'\r\nimport classNames from 'classnames/bind'\r\nimport styles from './button.css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\n/** Button component description. */\r\nconst Button = ({\r\n  className,\r\n  isDisabled,\r\n  isHidden,\r\n  onClick,\r\n  text\r\n}) => {\r\n  const btnStyle = classNames(\r\n    className,\r\n    cx({\r\n      button: true,\r\n      btnDisabled: isDisabled\r\n    })\r\n  )\r\n  let spanTag = null\r\n\r\n  if (text) {\r\n    spanTag = (\r\n      <span>\r\n        { text }\r\n      </span>\r\n    )\r\n  }\r\n  const button = (\r\n    <button\r\n      className={ btnStyle }\r\n      disabled={ isDisabled }\r\n      hidden={ isHidden }\r\n      onClick={ onClick ? () => onClick(text) : null }\r\n      type=\"button\"\r\n    >\r\n      { spanTag }\r\n    </button>\r\n  )\r\n  return button\r\n}\r\n\r\nexport default Button\r\n","export default {\r\n  TITLE: 'MasterMind',\r\n  COMBINATION: 'Combinación',\r\n  CORRECTPOSITION: 'Posición correcta',\r\n  COINCIDENCE: 'Coincidencias',\r\n  LASTMOVEMENT: 'Último movimiento',\r\n  SHOWMOVEMENTS: 'Ver movimientos',\r\n  HIDEMOVEMENTS: 'Ocultar movimientos',\r\n  CHECK: 'Comprobar',\r\n  PLAYAGAIN: 'Jugar de nuevo',\r\n  NEWGAME: 'Nueva partida'\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from 'components/button'\r\nimport LITERALS from 'commons/constants/literals'\r\nimport styles from './header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className={ styles.container }>\r\n        <div className={ styles.text }>\r\n          {LITERALS.TITLE}\r\n        </div>\r\n        <Button\r\n          className={ styles.reload }\r\n          onClick={ () => window.location.reload() }\r\n          text={ LITERALS.NEWGAME }\r\n        />\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Button from 'components/button'\r\nimport styles from './numberSelector.css'\r\n\r\nconst NumberSelector = ({\r\n  btnValues,\r\n  isDisabled,\r\n  onClick\r\n}) => {\r\n  const buttons = btnValues.map((btn) => (\r\n    <li key={ btn.text }>\r\n      <Button\r\n        className={ styles.btn }\r\n        isDisabled={ isDisabled || btn.isDisabled }\r\n        onClick={ onClick }\r\n        text={ btn.text }\r\n      />\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div className={ styles.container }>\r\n      <ul>\r\n        { buttons }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberSelector\r\n","// Libs\r\nimport React from 'react'\r\n\r\n/** Input component description. */\r\nconst Input = ({\r\n  className,\r\n  isDisabled,\r\n  isHidden,\r\n  value\r\n}) => {\r\n  const button = (\r\n    <input\r\n      className={ className }\r\n      disabled={ isDisabled }\r\n      hidden={ isHidden }\r\n      type=\"text\"\r\n      value={ value }\r\n    />\r\n  )\r\n  return button\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport Input from '../input'\r\nimport styles from './inputDisplay.css'\r\n\r\nconst InputDisplay = ({\r\n  inputs\r\n}) => {\r\n  const inputList = inputs.map((inp) => (\r\n    <li key={ inp.id }>\r\n      <Input\r\n        className={ styles.input }\r\n        isDisabled={ true }\r\n        value={ inp.text }\r\n      />\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div className={ styles.container }>\r\n      <ul>\r\n        { inputList }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputDisplay\r\n","import React, { useState } from 'react'\r\nimport classNames from 'classnames/bind'\r\nimport LITERALS from 'commons/constants/literals'\r\nimport styles from './movesTable.css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\n/** MovesTable component description. */\r\nconst MovesTable = ({ moves }) => {\r\n  const [isExpanded, changeExpanded] = useState(0)\r\n  const movesTag = moves.map((move) => (\r\n    <tr key={ move.id }>\r\n      <td>{ move.combination }</td>\r\n      <td>{ move.correctPosition }</td>\r\n      <td>{ move.coincidence }</td>\r\n    </tr>\r\n  ))\r\n\r\n  const classess = cx({\r\n    container: true,\r\n    expanded: isExpanded\r\n  })\r\n\r\n  return (\r\n    <div className={ classess }>\r\n      <button type=\"button\" className={ styles.header } onClick={ () => changeExpanded(!isExpanded) }>\r\n        <div className={ styles.movements }>\r\n          {isExpanded ? LITERALS.HIDEMOVEMENTS : LITERALS.SHOWMOVEMENTS}\r\n        </div>\r\n      </button>\r\n      <table className={ styles.table }>\r\n        <thead>\r\n          <tr>\r\n            <th>{LITERALS.COMBINATION}</th>\r\n            <th>{LITERALS.CORRECTPOSITION}</th>\r\n            <th>{LITERALS.COINCIDENCE}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { movesTag }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovesTable\r\n","const getButtonsValues = () => [\r\n  { text: '7' },\r\n  { text: '8' },\r\n  { text: '9' },\r\n  { text: '4' },\r\n  { text: '5' },\r\n  { text: '6' },\r\n  { text: '1' },\r\n  { text: '2' },\r\n  { text: '3' },\r\n  { text: '0' }\r\n]\r\n\r\nconst getInputValues = () => [\r\n  { text: '', id: 'inp0' },\r\n  { text: '', id: 'inp1' },\r\n  { text: '', id: 'inp2' },\r\n  { text: '', id: 'inp3' }\r\n]\r\n\r\nconst getRandomNumbers = (vMin = 0, vMax = 9) => {\r\n  const rndmNumbers = []\r\n  while (rndmNumbers.length < 4) {\r\n    const num = Math.floor(Math.random() * (vMax - vMin + 1) + vMin)\r\n    if (rndmNumbers.indexOf(num) === -1) rndmNumbers.push(num)\r\n  }\r\n  console.log(rndmNumbers)\r\n  return rndmNumbers\r\n}\r\n\r\nexport { getButtonsValues, getInputValues, getRandomNumbers }\r\n","import React, { Component } from 'react'\r\nimport NumberSelector from 'components/numberSelector'\r\nimport InputDisplay from 'components/inputDisplay'\r\nimport Button from 'components/button'\r\nimport MovesTable from 'components/movesTable'\r\nimport { getButtonsValues, getInputValues, getRandomNumbers } from 'commons/helpers/main'\r\nimport LITERALS from 'commons/constants/literals'\r\nimport styles from './body.css'\r\n\r\nclass Body extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.resetGame = this.resetGame.bind(this)\r\n    const rndmNumbers = getRandomNumbers()\r\n\r\n    this.state = {\r\n      secretNumber: rndmNumbers,\r\n      isDisabled: false,\r\n      btnValues: getButtonsValues(),\r\n      inputValues: getInputValues(),\r\n      moves: [],\r\n      isGameOver: false\r\n    }\r\n  }\r\n\r\n  resetGame = (rndmNumbers) => {\r\n    this.setState({\r\n      secretNumber: rndmNumbers,\r\n      isDisabled: false,\r\n      btnValues: getButtonsValues(),\r\n      inputValues: getInputValues(),\r\n      moves: [],\r\n      isGameOver: false\r\n    })\r\n  }\r\n\r\n  checkAnswer = () => {\r\n    const {\r\n      inputValues,\r\n      secretNumber,\r\n      moves\r\n    } = this.state\r\n\r\n    const hitsbin = []\r\n    let end = false\r\n    const move = inputValues.map((value) => value.text).join('')\r\n    let correct = 0\r\n    let coinc = 0\r\n\r\n    secretNumber.forEach((number, i) => {\r\n      if (`${number}` === inputValues[i].text) {\r\n        correct += 1\r\n        hitsbin[i] = 1\r\n      }\r\n    })\r\n\r\n    if (correct < secretNumber.length) {\r\n      secretNumber.forEach((number, i) => {\r\n        if (hitsbin[i] !== 1) {\r\n          if (hitsbin[i] !== 1) {\r\n            for (let y = 0; y < inputValues.length; y += 1) {\r\n              if (inputValues[y].text === `${number}` && hitsbin[y] !== 1) {\r\n                coinc += 1\r\n                break\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      end = true\r\n    }\r\n\r\n    moves.unshift({\r\n      id: moves.length,\r\n      combination: move,\r\n      correctPosition: correct,\r\n      coincidence: coinc\r\n    })\r\n\r\n    if (!end) {\r\n      this.setState({\r\n        btnValues: getButtonsValues(),\r\n        inputValues: getInputValues(),\r\n        moves,\r\n        isDisabled: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isGameOver: true\r\n      })\r\n    }\r\n  }\r\n\r\n  clickHandler = (val) => {\r\n    const { btnValues, inputValues } = this.state\r\n\r\n    for (let x = 0; x < btnValues.length; x += 1) {\r\n      if (btnValues[x].text === val) {\r\n        btnValues[x].isDisabled = true\r\n        break\r\n      }\r\n    }\r\n    for (let x = 0; x < inputValues.length; x += 1) {\r\n      if (inputValues[x].text.length === 0) {\r\n        inputValues[x].text = val\r\n        break\r\n      }\r\n    }\r\n    this.setState({\r\n      btnValues,\r\n      inputValues,\r\n      isDisabled: inputValues[inputValues.length - 1].text.length > 0\r\n    })\r\n  }\r\n\r\n  playAgain = () => {\r\n    const rndmNumbers = getRandomNumbers()\r\n    this.resetGame(rndmNumbers)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      btnValues,\r\n      inputValues,\r\n      isDisabled,\r\n      moves,\r\n      isGameOver\r\n    } = this.state\r\n\r\n    const lastMovement = moves[0] ? (\r\n      <div>\r\n        {LITERALS.LASTMOVEMENT}\r\n        <div>\r\n          {`${LITERALS.COMBINATION}: `}\r\n          <span>{moves[0].combination}</span>\r\n        </div>\r\n        <div>\r\n          {`${LITERALS.CORRECTPOSITION}: `}\r\n          <span>{moves[0].correctPosition}</span>\r\n        </div>\r\n        <div>\r\n          {`${LITERALS.COINCIDENCE}: `}\r\n          <span>{moves[0].coincidence}</span>\r\n        </div>\r\n      </div>\r\n    ) : null\r\n\r\n    return (\r\n      <div className={ styles.container }>\r\n        <InputDisplay\r\n          inputs={ inputValues }\r\n        />\r\n        <NumberSelector\r\n          btnValues={ btnValues }\r\n          isDisabled={ isDisabled }\r\n          onClick={ this.clickHandler }\r\n        />\r\n        <Button\r\n          className={ styles.actionButton }\r\n          isDisabled={ inputValues[inputValues.length - 1].text.length === 0 }\r\n          onClick={ isGameOver ? this.playAgain : this.checkAnswer }\r\n          text={ isGameOver ? LITERALS.PLAYAGAIN : LITERALS.CHECK }\r\n        />\r\n        {lastMovement}\r\n        <MovesTable\r\n          moves={ moves }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Body\r\n","import React, { Component } from 'react'\r\nimport styles from './App.css'\r\nimport Header from './modules/header'\r\nimport Body from './modules/body'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={ styles.wrapper }>\r\n        <div className={ styles.mainContainer }>\r\n          <Header />\r\n          <Body />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}